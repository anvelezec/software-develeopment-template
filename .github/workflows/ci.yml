name: Continous integration

on:
  workflow_dispatch:
  pull_request:
    branches: [ "main" ]

env:
  PROJECT_NAME: ${{ vars.ENV_NAME }}
  ENVIRONMENT: ${{ vars.ENV  }}

jobs:
  build:
    name: Run unit, integration and functional tests
    runs-on: ubuntu-latest
    steps:
      - name: Use env vars
        run: echo "hello $PROJECT_NAME, ${{ vars.ENV  }},  $GITHUB_ACTION"
        
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.2.1
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install library
        run: poetry install --no-interaction

      - name: Run isort
        uses: isort/isort-action@master
        with:
          sortPaths: "./src/ ./tests"

      - name: Run black on source code
        uses: psf/black@stable
        with:
          options: "--check --verbose"
          src: "."

      - name: Run Tests
        run: |
          source .venv/bin/activate
          pytest
